#version 460

#extension GL_EXT_nonuniform_qualifier : require
#extension GL_GOOGLE_include_directive : require

layout(local_size_x = 16, local_size_y = 16) in;

layout(push_constant) uniform PushConsts
{
    uvec2 sourceResolution;
    uint sourceMip;
} pc;

layout(set = 0, binding = 0) uniform sampler2D backbuffer[];
layout(rgba16f, set = 0, binding = 1) uniform image2D image[];

float mipWeight() {
    return 1.0 / (pc.sourceMip + 1);
}

void main()
{
    vec2 texelCoord = vec2(float(gl_GlobalInvocationID.x) / pc.sourceResolution.x, float(gl_GlobalInvocationID.y) / pc.sourceResolution.y);

    vec2 texelSize = 1.0 / pc.sourceResolution;
    float x = texelSize.x;
    float y = texelSize.y;

    vec3 e = texture(backbuffer[pc.sourceMip + 1], vec2(texelCoord.x,       texelCoord.y)).rgb;

    ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);
    vec4 current = imageLoad(image[pc.sourceMip], storePos);
    current += vec4(e, 0.0) * mipWeight();

    imageStore(image[pc.sourceMip], storePos, current);
}
