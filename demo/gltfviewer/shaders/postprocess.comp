#version 460

#extension GL_GOOGLE_include_directive : require

#include "color_conversion.glsl"

layout(local_size_x = 16, local_size_y = 16) in;

layout(constant_id = 0) const int SAMPLES = 8;

layout(push_constant) uniform PushConsts
{
    bool colorConversion;
    bool toneMapping;
} pc;

layout(set = 0, binding = 0) uniform sampler2DMS backbuffer;

layout(rgba16f, set = 0, binding = 1) uniform image2D image;

vec4 resolve(ivec2 uv)
{
    vec4 result = vec4(0.0);
    for (int i = 0; i < SAMPLES; i++)
    {
        vec4 val = texelFetch(backbuffer, uv, i);
        result += val;
    }

    return result / float(SAMPLES);
}

void main()
{
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);

    vec4 result = resolve(texelCoord);
    if (pc.colorConversion)
    {
        result = pbrNeutralToneMapping(result);
    }

    if (pc.toneMapping)
    {
        result = fromLinear(result);
    }

    imageStore(image, texelCoord, result);
}
