[
  # C++ alternatives to C standard headers
  { include: [ "<assert.h>", public, "<cassert>", public ] },
  { include: [ "<complex.h>", public, "<ccomplex>", public ] },
  { include: [ "<ctype.h>", public, "<cctype>", public ] },
  { include: [ "<errno.h>", public, "<cerrno>", public ] },
  { include: [ "<float.h>", public, "<cfloat>", public ] },
  { include: [ "<iso646.h>", public, "<ciso646>", public ] },
  { include: [ "<limits.h>", public, "<climits>", public ] },
  { include: [ "<locale.h>", public, "<clocale>", public ] },
  { include: [ "<math.h>", public, "<cmath>", public ] },
  { include: [ "<setjmp.h>", public, "<csetjmp>", public ] },
  { include: [ "<signal.h>", public, "<csignal>", public ] },
  { include: [ "<stdarg.h>", public, "<cstdarg>", public ] },
  { include: [ "<stddef.h>", public, "<cstddef>", public ] },
  { include: [ "<stdio.h>", public, "<cstdio>", public ] },
  { include: [ "<stdlib.h>", public, "<cstdlib>", public ] },
  { include: [ "<string.h>", public, "<cstring>", public ] },
  { include: [ "<time.h>", public, "<ctime>", public ] },
  { include: [ "<wchar.h>", public, "<cwchar>", public ] },
  { include: [ "<wctype.h>", public, "<cwctype>", public ] },

  # libstc++ aliases
  { include: [ "<bits/chrono.h>", private, "<chrono>", public ] },
  { include: [ "<bits/fs_path.h>", private, "<filesystem>", public ] },
  { include: [ "<bits/local_lim.h>", private, "<limits.h>", public ] },
  { include: [ "<bits/memory_resource.h>", private, "<memory_resource>", public ] },
  { include: [ "<bits/refwrap.h>", private, "<functional>", public ] },
  { include: [ "<bits/shared_ptr.h>", private, "<memory>", public ] },
  { include: [ "<bits/std_abs.h>", private, "<math.h>", public ] },
  { include: [ "<bits/std_function.h>", private, "<functional>", public ] },
  { include: [ "<bits/stdint-intn.h>", private, "<stdint.h>", public ] },
  { include: [ "<bits/stdint-uintn.h>", private, "<stdint.h>", public ] },
  { include: [ "<bits/time.h>", private, "<time.h>", public ] },
  { include: [ "<bits/types/clock_t.h>", private, "<time.h>", public ] },
  { include: [ "<bits/types/mbstate_t.h>", private, "<wchar.h>", public ] },
  { include: [ "<bits/types/struct_timespec.h>", private, "<time.h>", public ] },
  { include: [ "<bits/types/struct_timeval.h>", private, "<time.h>", public ] },
  { include: [ "<bits/types/struct_tm.h>", private, "<time.h>", public ] },
  { include: [ "<bits/types/time_t.h>", private, "<time.h>", public ] },
  { include: [ "<bits/utility.h>", private, "<utility>", public ] },
  { include: [ "<__stdarg_va_arg.h>", private, "<cstdarg>", public ] },
  
  # Catch2 aliases
  { include: [ "<catch2/catch_message.hpp>", public, "<catch2/catch_test_macros.hpp>", public ] },

  # glm aliases
  { include: [ "<glm/detail/func_common.inl>", private, "<glm/common.hpp>", public] },
  { include: [ "<glm/detail/func_matrix.inl>", private, "<glm/matrix.hpp>", public] },
  { include: [ "<glm/detail/type_vec2.hpp>", private, "<glm/vec2.hpp>", public ] },
  { include: [ "<glm/detail/type_vec2.inl>", private, "<glm/vec2.hpp>", public ] },
  { include: [ "<glm/ext/vector_int2.hpp>", private, "<glm/vec2.hpp>", public ] },
  { include: [ "<glm/ext/vector_float2.hpp>", private, "<glm/vec2.hpp>", public ] },
  { include: [ "<glm/ext/vector_uint2.hpp>", private, "<glm/vec2.hpp>", public ] },
  { include: [ "<glm/detail/type_vec3.hpp>", private, "<glm/vec3.hpp>", public ] },
  { include: [ "<glm/detail/type_vec3.inl>", private, "<glm/vec3.hpp>", public ] },
  { include: [ "<glm/ext/vector_int3.hpp>", private, "<glm/vec3.hpp>", public ] },
  { include: [ "<glm/ext/vector_float3.hpp>", private, "<glm/vec3.hpp>", public ] },
  { include: [ "<glm/ext/vector_uint3.hpp>", private, "<glm/vec3.hpp>", public ] },
  { include: [ "<glm/detail/type_vec4.hpp>", private, "<glm/vec4.hpp>", public ] },
  { include: [ "<glm/detail/type_vec4.inl>", private, "<glm/vec4.hpp>", public ] },
  { include: [ "<glm/ext/vector_int4.hpp>", private, "<glm/vec4.hpp>", public ] },
  { include: [ "<glm/ext/vector_float4.hpp>", private, "<glm/vec4.hpp>", public ] },
  { include: [ "<glm/ext/vector_uint4.hpp>", private, "<glm/vec4.hpp>", public ] },
  { include: [ "<glm/detail/type_mat4x4.hpp>", private, "<glm/mat4x4.hpp>", public ] },
  { include: [ "<glm/detail/type_mat4x4.inl>", private, "<glm/mat4x4.hpp>", public ] },
  { include: [ "<glm/ext/matrix_float4x4.hpp>", private, "<glm/mat4x4.hpp>", public ] },
  { include: [ "<glm/ext/matrix_clip_space.inl>", private, "<glm/gtc/matrix_transform.hpp>", public ] },
  { include: [ "<glm/ext/matrix_projection.inl>", private, "<glm/gtc/matrix_transform.hpp>", public ] },
  { include: [ "<glm/ext/matrix_transform.inl>", private, "<glm/gtc/matrix_transform.hpp>", public ] },
  { include: [ "<glm/ext/projection.inl>", private, "<glm/gtc/matrix_transform.hpp>", public ] },
  { include: [ "<glm/gtc/type_ptr.inl>", private, "<glm/gtc/type_ptr.hpp>", public ] },
  { include: [ "<glm/detail/type_quat.inl>", private, "<glm/gtc/quaternion.hpp>", public ] },
  { include: [ "<glm/detail/type_quat.hpp>", private, "<glm/gtc/quaternion.hpp>", public ] },
  { include: [ "<glm/detail/func_geometric.inl>", private, "<glm/geometric.hpp>", public ] },
  { include: [ "<glm/detail/func_trigonometric.inl>", private, "<glm/trigonometric.hpp>", public ] },
  { symbol: [ "glm::vec2", private, "<glm/vec2.hpp>", public ] },
  { symbol: [ "glm::vec3", private, "<glm/vec3.hpp>", public ] },
  { symbol: [ "glm::vec4", private, "<glm/vec4.hpp>", public ] },
  { symbol: [ "glm::mat4", private, "<glm/mat4x4.hpp>", public ] },

  # bullet3 aliases
  { symbol: ["btScalar", private, "<LinearMath/btScalar.h>", public] },

  # EnTT aliases
  { include: ["@<entt/.*>", private, "<entt/entt.hpp>", public] },

  # freetype aliases
  { include: ["@<freetype/.*>", private, "<ft2build.h>", public] },
]
