name: Static Analysis

on:
  push:
    branches: [ '**' ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  clang-tidy:
    runs-on: ubuntu-24.04
    
    env:
      GCC_VER: 14
      CLANG_VER: 18
      
    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install gcc-${{ env.GCC_VER }}
        uses: ./.github/actions/install-gcc

      - name: Install clang-${{ env.CLANG_VER }}
        uses: ./.github/actions/install-clang 
        with:
          version: ${{ env.CLANG_VER }}
          clang-tidy: true

      - name: Install APT packages
        uses: ./.github/actions/install-apt-packages

      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: clang-libstdcxx-amd64-linux-static-analysis

      - name: Configure CMake
        run: |
          cmake -DNIKU_ENABLE_CLANG_TIDY=ON --preset debug

      - name: Build
        run: |
          cmake --build --preset=debug

  iwyu:
    runs-on: ubuntu-24.04
    
    env:
      GCC_VER: 14
      CLANG_VER: 18
      
    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install gcc-${{ env.GCC_VER }}
        uses: ./.github/actions/install-gcc

      - name: Install clang-${{ env.CLANG_VER }}
        uses: ./.github/actions/install-clang 
        with:
          dev: true

      - name: Install APT packages
        uses: ./.github/actions/install-apt-packages

      - name: Install IWYU
        uses: ./.github/actions/install-iwyu

      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: clang-libstdcxx-amd64-linux-static-analysis

      - name: Configure CMake
        run: |
          cmake -DNIKU_ENABLE_IWYU=ON --preset debug

      - name: Build
        run: |
          cmake --build --preset=debug

  gcc-analyzer:
    runs-on: ubuntu-24.04
    
    env:
      GCC_VER: 14
        
    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install gcc-${{ env.GCC_VER }}
        uses: ./.github/actions/install-gcc

      - name: Install APT packages
        uses: ./.github/actions/install-apt-packages

      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: gcc-amd64-linux-static-analysis             

      - name: Configure CMake
        run: |
          cmake -DNIKU_ENABLE_COMPILER_STATIC_ANALYSIS=ON --preset debug

      - name: Build
        run: |
          cmake --build --preset=debug

  cppcheck:
    runs-on: ubuntu-24.04
    
    env:
      GCC_VER: 14
        
    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install gcc-${{ env.GCC_VER }}
        uses: ./.github/actions/install-gcc

      - name: Install APT packages
        uses: ./.github/actions/install-apt-packages

      - name: Install Cppcheck
        uses: ./.github/actions/install-cppcheck

      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: gcc-amd64-linux-static-analysis             

      - name: Configure CMake
        run: |
          cmake -DNIKU_ENABLE_CPPCHECK=ON --preset debug

      - name: Build
        run: |
          cmake --build --preset=debug

  msvc-analyze:
    runs-on: windows-2022

    env:
      CONAN_PROFILE: msvc-2022

    steps:
      - name: Initialize
        run: |
          git config --global core.autocrlf input
          
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install Vulkan SDK
        uses: ./.github/actions/install-vulkan-sdk

      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: msvc-amd64-windows-analyze

      - name: Configure CMake
        run: |
          cmake -DNIKU_ENABLE_COMPILER_STATIC_ANALYSIS=ON --preset default
          
      - name: Build
        run: |
          cmake --build --preset=multi-debug

