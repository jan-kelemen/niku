name: Weekly Debug Builds

on:
  schedule:
    - cron: '30 18 * * 0'
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-24.04
    
    env:
      GCC_VER: 14
      CLANG_VER: 19
      
    strategy:
      fail-fast: false
      matrix:
        profile: [gcc-amd64-linux, clang-libstdcxx-amd64-linux, clang-libcxx-amd64-linux]
        
    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install gcc-${{ env.GCC_VER }}
        uses: ./.github/actions/install-gcc
        with:
          version: ${{ env.GCC_VER }}

      - name: Install clang-${{ env.CLANG_VER }}
        if: contains(matrix.profile, 'clang')
        uses: ./.github/actions/install-clang 
        with:
          version: ${{ env.CLANG_VER }}

      - name: Install APT packages
        uses: ./.github/actions/install-apt-packages

      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: ${{ matrix.profile }}
          cache: false

      - name: Configure CMake
        run: |
          cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON --preset debug

      - name: Build
        run: |
          cmake --build --preset debug
      
      - name: Test
        run: |
          ctest --preset debug

  windows-msvc:
    runs-on: windows-2025
    
    strategy:
      fail-fast: false
      matrix:
        profile: [msvc-amd64-windows]
        
    steps:
      - name: Initialize
        run: |
          git config --global core.autocrlf input
          
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install Vulkan SDK
        uses: ./.github/actions/install-vulkan-sdk

      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: ${{ matrix.profile }}
          cache: false

      - name: Configure CMake
        run: |
          cmake --preset default
          
      - name: Build
        run: |
          cmake --build --preset multi-debug

      - name: Test
        run: |
          ctest --preset multi-debug

  windows-clang:
    runs-on: windows-2025
    
    env:
      CLANG_VER: 19
      
    strategy:
      fail-fast: false
      matrix:
        profile: [clang-amd64-windows]

    steps:
      - name: Initialize
        run: |
          git config --global core.autocrlf input
          
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install Vulkan SDK
        uses: ./.github/actions/install-vulkan-sdk
        
      - name: Install Ninja
        run: |
          choco install ninja
          
      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: ${{ matrix.profile }}
          cache: false

      - name: Configure CMake
        run: |
          cmake -G=Ninja -DCMAKE_INSTALL_PREFIX=${{ matrix.profile }} --preset debug
          
      - name: Build
        run: |
          cmake --build --preset debug

      - name: Test
        run: |
          ctest --preset debug

